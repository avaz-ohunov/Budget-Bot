# Bot.py

from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, KeyboardButtonColor, Text, EMPTY_KEYBOARD
from vkbottle import PhotoMessageUploader
from vkbottle import BaseStateGroup
from vkbottle import CtxStorage
from BotToken import bot_token
import importlib
import os
from datetime import datetime
import sqlite3


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token = bot_token)
ctx_name = CtxStorage()


# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–Ω—Ç–∞ –±—é–¥–∂–µ—Ç–æ–≤
class ShowBudgets(BaseStateGroup):
	get_budget_num = 1
	get_command = 2
	change_name = 3
	change_summ_plus = 4
	change_summ_minus = 5


# –°–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±—é–¥–∂–µ—Ç–∞
class CreateBudgets(BaseStateGroup):
	get_name = 1
	get_summ = 2


# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–Ω—Ç–∞ –æ–±—â–∏—Ö –±—é–¥–∂–µ—Ç–æ–≤
class ShowOurBudgets(BaseStateGroup):
	get_budget_num = 1
	get_command = 2
	change_name = 3
	change_summ_plus = 4
	change_summ_minus = 5


# –°–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
class CreateOurBudgets(BaseStateGroup):
	get_name = 1
	get_summ = 2


# –ö–Ω–æ–ø–∫–∏
kb_budgets = Keyboard()
kb_budgets.add(Text("–ú–æ–∏ –±—é–¥–∂–µ—Ç—ã"))
kb_budgets.add(Text("–û–±—â–∏–µ –±—é–¥–∂–µ—Ç—ã"))
kb_budgets.row()
kb_budgets.add(Text("–í—Å–µ–≥–æ –¥–µ–Ω–µ–≥"), color = KeyboardButtonColor.PRIMARY)


kb_cancel_create_budgets = Keyboard()
kb_cancel_create_budgets.add(Text("–ù–∞–∑–∞–¥"), color = KeyboardButtonColor.NEGATIVE)
kb_cancel_create_budgets.add(Text("–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç"), color = KeyboardButtonColor.POSITIVE)


kb_get_command = Keyboard()

kb_get_command.add(Text("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ"))
kb_get_command.row()

kb_get_command.add(Text("–í–≤–æ–¥ ‚ûï"), color = KeyboardButtonColor.POSITIVE)
kb_get_command.add(Text("–í—ã–≤–æ–¥ ‚ûñ"), color = KeyboardButtonColor.POSITIVE)
kb_get_command.row()

kb_get_command.add(Text("–£–¥–∞–ª–∏—Ç—å –±—é–¥–∂–µ—Ç"), color = KeyboardButtonColor.NEGATIVE)
kb_get_command.add(Text("–ù–∞–∑–∞–¥"), color = KeyboardButtonColor.NEGATIVE)


kb_back = Keyboard()
kb_back.add(Text("–ù–∞–∑–∞–¥"), color = KeyboardButtonColor.NEGATIVE)


kb_cancel = Keyboard()
kb_cancel.add(Text("–û—Ç–º–µ–Ω–∞"), color = KeyboardButtonColor.NEGATIVE)


kb_continue = Keyboard()
kb_continue.add(Text("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))


kb_cancel_continue = Keyboard()
kb_cancel_continue.add(Text("–û—Ç–º–µ–Ω–∞"), color = KeyboardButtonColor.NEGATIVE)
kb_cancel_continue.add(Text("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —é–∑–µ—Ä–∞
def reg(user_id):
	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		sql.execute(f"CREATE TABLE IF NOT EXISTS t{user_id}(name TEXT, summ TEXT)")


# –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def create_keyboard(nums):
	global dynamic_kb
	dynamic_kb = Keyboard()
	dynamic_kb.add(Text("–ù–∞–∑–∞–¥"), color = KeyboardButtonColor.NEGATIVE)
	dynamic_kb.add(Text("–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç"), color = KeyboardButtonColor.POSITIVE)
	dynamic_kb.row()

	for i in range(nums):
		i += 1
		if i % 5 == 0:
			dynamic_kb.row()
			dynamic_kb.add(Text(str(i)))

		else:
			dynamic_kb.add(Text(str(i)))


# –ú–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –±—é–¥–∂–µ—Ç–æ–≤
def show_budgets(user_id):
	global budget_names, budget_amount, db, sql

	budget_names = ""
	budget_amount = 0
	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		for budget in sql.execute(f"SELECT name FROM t{user_id}"):
			budget_amount += 1
			budget_names += f"{budget_amount}) {budget[0]}\n"

	if budget_names == "":
		budget_names = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –±—é–¥–∂–µ—Ç–æ–≤.\n–í—ã –º–æ–∂–µ—Ç–µ –∏—Ö —Å–æ–∑–¥–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç¬ªüëá"


# –ú–µ—Ç–æ–¥ –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞
def choose_budget(user_id):
	global dict_names, dict_name
	dict_names = {}
	dict_name = {}
	i = 0

	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		for budget in sql.execute(f"SELECT * FROM t{user_id}"):
			i += 1

			if int(budget[1]) < 0:
				dict_names.update({i: f"{budget[0]}: ‚Äì‚ÇΩ{'{0:,}'.format(int(budget[1])).replace(',', ' ').replace('-', '')}"})
				dict_name.update({i: budget[0]})
			
			else:
				dict_names.update({i: f"{budget[0]}: ‚ÇΩ{'{0:,}'.format(int(budget[1])).replace(',', ' ')}"})
				dict_name.update({i: budget[0]})


# –ú–µ—Ç–æ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
def change_name(user_id, budget_new_name):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]
	sql.execute(f"UPDATE t{user_id} SET name = '{budget_new_name}' WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è —Å—É–º–º—ã –∫ –±—é–¥–∂–µ—Ç—É
def plus_summ(user_id, budget_plus):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]

	for i in sql.execute(f"SELECT summ FROM t{user_id} WHERE name = '{budget_name}'"):
		summ = i[0]
		sql.execute(f"UPDATE t{user_id} SET summ = {int(summ) + int(budget_plus)} WHERE name = '{budget_name}'")
		db.commit()


# –ú–µ—Ç–æ–¥ —É–±–∞–≤–ª–µ–Ω–∏—è —Å—É–º–º—ã —Å –±—é–¥–∂–µ—Ç–∞
def minus_summ(user_id, budget_minus):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]
	
	for i in sql.execute(f"SELECT summ FROM t{user_id} WHERE name = '{budget_name}'"):
		summ = i[0]
		sql.execute(f"UPDATE t{user_id} SET summ = {int(summ) - int(budget_minus)} WHERE name = '{budget_name}'")
		db.commit()


# –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
def delete_budget(user_id):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]
	sql.execute(f"DELETE FROM t{user_id} WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞
def show_update(user_id, budget_new_name):
	global news
	
	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		for s in sql.execute(f"SELECT summ FROM t{user_id} WHERE name = '{budget_new_name}'"):
			if int(s[0]) < 0:
				news = f"{budget_new_name}: ‚Äì‚ÇΩ{'{0:,}'.format(int(s[0])).replace(',', ' ').replace('-', '')}"
			
			else:
				news = f"{budget_new_name}: ‚ÇΩ{'{0:,}'.format(int(s[0])).replace(',', ' ')}"


# –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
def create_budget(user_id, budget_name):
	global msg, sql, db

	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		sql.execute(f"SELECT name FROM t{user_id} WHERE name = '{budget_name}'")
	
		if sql.fetchone() is None:
			sql.execute(f"INSERT INTO t{user_id} VALUES (?, ?)", (budget_name, 0))
			msg = "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±—é–¥–∂–µ—Ç–∞"

		else:
			msg = "–¢–∞–∫–æ–π –±—é–¥–∂–µ—Ç —É–∂–µ –∏–º–µ–µ—Ç—Å—è!"


# –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–º–º—ã –±—é–¥–∂–µ—Ç–∞
def set_summ(user_id, budget_update_summ, budget_name):
	sql.execute(f"UPDATE t{user_id} SET summ = '{budget_update_summ}' WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
def cancel_create_budget(user_id, budget_name):
	sql.execute(f"DELETE FROM t{user_id} WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –æ–±—â–∏—Ö –±—é–¥–∂–µ—Ç–æ–≤
def show_our_budgets():
	global budget_names, budget_amount, db, sql

	budget_names = ""
	budget_amount = 0
	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		for budget in sql.execute(f"SELECT name FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã"):
			budget_amount += 1
			budget_names += f"{budget_amount}) {budget[0]}\n"

	if budget_names == "":
		budget_names = "–û–±—â–∏—Ö –±—é–¥–∂–µ—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.\n–í—ã –º–æ–∂–µ—Ç–µ –∏—Ö —Å–æ–∑–¥–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç¬ªüëá"


# –ú–µ—Ç–æ–¥ –≤—ã–±–æ—Ä–∞ –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def choose_our_budget():
	global dict_names, dict_name
	dict_names = {}
	dict_name = {}
	i = 0

	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		for budget in sql.execute(f"SELECT * FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã"):
			i += 1

			if int(budget[1]) < 0:
				dict_names.update({i: f"{budget[0]}: ‚Äì‚ÇΩ{'{0:,}'.format(int(budget[1])).replace(',', ' ').replace('-', '')}"})
				dict_name.update({i: budget[0]})
			
			else:
				dict_names.update({i: f"{budget[0]}: ‚ÇΩ{'{0:,}'.format(int(budget[1])).replace(',', ' ')}"})
				dict_name.update({i: budget[0]})


# –ú–µ—Ç–æ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def change_our_name(budget_new_name):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]
	sql.execute(f"UPDATE –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã SET name = '{budget_new_name}' WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è —Å—É–º–º—ã –∫ –æ–±—â–µ–º—É –±—é–¥–∂–µ—Ç—É
def plus_our_summ(budget_plus):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]

	for i in sql.execute(f"SELECT summ FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã WHERE name = '{budget_name}'"):
		summ = i[0]
		sql.execute(f"UPDATE –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã SET summ = {int(summ) + int(budget_plus)} WHERE name = '{budget_name}'")
		db.commit()


# –ú–µ—Ç–æ–¥ —É–±–∞–≤–ª–µ–Ω–∏—è —Å—É–º–º—ã —Å –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def minus_our_summ(budget_minus):
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]
	
	for i in sql.execute(f"SELECT summ FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã WHERE name = '{budget_name}'"):
		summ = i[0]
		sql.execute(f"UPDATE –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã SET summ = {int(summ) - int(budget_minus)} WHERE name = '{budget_name}'")
		db.commit()


# –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def delete_our_budget():
	name_id = ctx_name.get("name")
	budget_name = dict_name[int(name_id)]
	sql.execute(f"DELETE FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def show_our_update(budget_new_name):
	global news
	
	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		for s in sql.execute(f"SELECT summ FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã WHERE name = '{budget_new_name}'"):
			if int(s[0]) < 0:
				news = f"{budget_new_name}: ‚Äì‚ÇΩ{'{0:,}'.format(int(s[0])).replace(',', ' ').replace('-', '')}"
			
			else:
				news = f"{budget_new_name}: ‚ÇΩ{'{0:,}'.format(int(s[0])).replace(',', ' ')}"


# –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def create_our_budget(budget_name):
	global msg, sql, db

	with sqlite3.connect('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db') as db:
		sql = db.cursor()
		sql.execute(f"SELECT name FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã WHERE name = '{budget_name}'")
	
		if sql.fetchone() is None:
			sql.execute(f"INSERT INTO –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã VALUES (?, ?)", (budget_name, 0))
			msg = "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±—é–¥–∂–µ—Ç–∞"

		else:
			msg = "–¢–∞–∫–æ–π –±—é–¥–∂–µ—Ç —É–∂–µ –∏–º–µ–µ—Ç—Å—è!"


# –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–º–º—ã –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def set_our_summ(budget_update_summ, budget_name):
	sql.execute(f"UPDATE –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã SET summ = '{budget_update_summ}' WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
def cancel_create_our_budget(budget_name):
	sql.execute(f"DELETE FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã WHERE name = '{budget_name}'")
	db.commit()


# –ú–µ—Ç–æ–¥ —Å—É–º–º—ã –≤—Å–µ—Ö –±—é–¥–∂–µ—Ç–æ–≤
def summ_all_budgets(user_id):
	global all_summs
	all_summs = 0

	with sqlite3.connect("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.db") as db:
		sql = db.cursor()
		for summ in sql.execute(f"SELECT summ FROM t{user_id}"):
			for i in summ:
				all_summs += int(i)

		for summ in sql.execute(f"SELECT summ FROM –û–±—â–∏–µ_–±—é–¥–∂–µ—Ç—ã"):
			for i in summ:
				all_summs += int(i)


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–Ω—Ç–∞ –±—é–¥–∂–µ—Ç–æ–≤
@bot.on.message(lev = "–ú–æ–∏ –±—é–¥–∂–µ—Ç—ã")
async def print_budgets(message: Message):
	global lev
	lev = "my"
	show_budgets(message.peer_id)
	if budget_amount > 0:
		create_keyboard(budget_amount)
		await message.answer(budget_names, keyboard = dynamic_kb)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.get_budget_num)

	else:
		await message.answer(budget_names, keyboard = kb_cancel_create_budgets)


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = ShowBudgets.get_budget_num)
async def get_budget_num(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		await bot.state_dispenser.delete(message.peer_id)
		
		try:
			ctx_name.delete("name")
		except KeyError:
			pass

		await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb_budgets)

	elif message.text == "–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç":
		await bot.state_dispenser.delete(message.peer_id)
		
		try:
			ctx_name.delete("name")
		except KeyError:
			pass

		await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞", keyboard = kb_cancel)
		await bot.state_dispenser.set(message.peer_id, CreateBudgets.get_name)
	
	else:
		try:
			choose_budget(message.peer_id)
			ctx_name.set("name", message.text)
			await message.answer(dict_names[int(message.text)], keyboard = kb_get_command)
			await bot.state_dispenser.set(message.peer_id, ShowBudgets.get_command)
		except:
			await message.answer("–ë—é–¥–∂–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
@bot.on.message(state = ShowBudgets.get_command)
async def get_command(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		show_budgets(message.peer_id)
		create_keyboard(budget_amount)
		await message.answer(budget_names, keyboard = dynamic_kb)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.get_budget_num)

	elif message.text == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ":
		await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞", keyboard = kb_back)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.change_name)

	elif message.text == "–í–≤–æ–¥ ‚ûï":
		await message.answer("–°–∫–æ–ª—å–∫–æ –Ω–∞–¥–æ –≤–Ω–µ—Å—Ç–∏ –≤ –±—é–¥–∂–µ—Ç?", keyboard = kb_back)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.change_summ_plus)

	elif message.text == "–í—ã–≤–æ–¥ ‚ûñ":
		await message.answer("–°–∫–æ–ª—å–∫–æ –Ω–∞–¥–æ –≤—ã–≤–µ—Å—Ç–∏ —Å –±—é–¥–∂–µ—Ç–∞?", keyboard = kb_back)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.change_summ_minus)

	elif message.text == "–£–¥–∞–ª–∏—Ç—å –±—é–¥–∂–µ—Ç":
		delete_budget(message.peer_id)
		await message.answer("–ë—é–¥–∂–µ—Ç —É–¥–∞–ª—ë–Ω", keyboard = kb_budgets)
		await bot.state_dispenser.delete(message.peer_id)
		ctx_name.delete("name")

	else:
		await message.answer("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
@bot.on.message(state = ShowBudgets.change_name)
async def change_budget_name(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		choose_budget(message.peer_id)
		new_message = ctx_name.get("name")
		await message.answer(dict_names[int(new_message)], keyboard = kb_get_command)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.get_command)

	else:
		change_name(message.peer_id, message.text)
		show_update(message.peer_id, message.text)
		await message.answer("–ë—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω", keyboard = kb_budgets)
		await message.answer(news)
		await bot.state_dispenser.delete(message.peer_id)
		ctx_name.delete("name")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è –∫ —Å—É–º–º–µ
@bot.on.message(state = ShowBudgets.change_summ_plus)
async def change_budget_summ(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		choose_budget(message.peer_id)
		new_message = ctx_name.get("name")
		await message.answer(dict_names[int(new_message)], keyboard = kb_get_command)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.get_command)

	else:
		try:
			name_id = ctx_name.get("name")
			budget_name = dict_name[int(name_id)]
			plus_summ(message.peer_id, message.text.replace(" ", ""))
			show_update(message.peer_id, budget_name)

			await message.answer("–ë—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω", keyboard = kb_budgets)
			await message.answer(news)

			await bot.state_dispenser.delete(message.peer_id)
			ctx_name.delete("name")
		except:
			await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ —É–±–∞–≤–ª–µ–Ω–∏—è —Å —Å—É–º–º—ã –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = ShowBudgets.change_summ_minus)
async def change_budget_minus(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		choose_budget(message.peer_id)
		new_message = ctx_name.get("name")
		await message.answer(dict_names[int(new_message)], keyboard = kb_get_command)
		await bot.state_dispenser.set(message.peer_id, ShowBudgets.get_command)

	else:
		try:
			name_id = ctx_name.get("name")
			budget_name = dict_name[int(name_id)]
			minus_summ(message.peer_id, message.text.replace(" ", ""))
			show_update(message.peer_id, budget_name)

			await message.answer("–ë—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω", keyboard = kb_budgets)
			await message.answer(news)

			await bot.state_dispenser.delete(message.peer_id)
			ctx_name.delete("name")
		except:
			await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = CreateBudgets.get_name)
async def get_budget_name(message: Message):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		await bot.state_dispenser.delete(message.peer_id)
		
		try:
			ctx_name.delete("name")
		except KeyError:
			pass

		await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb_budgets)

	else:
		create_budget(message.peer_id, message.text)
		if msg == "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±—é–¥–∂–µ—Ç–∞":
			await message.answer(msg, keyboard = kb_cancel_continue)
			ctx_name.set("name", message.text)
			await bot.state_dispenser.set(message.peer_id, CreateBudgets.get_summ)

		elif msg == "–¢–∞–∫–æ–π –±—é–¥–∂–µ—Ç —É–∂–µ –∏–º–µ–µ—Ç—Å—è!":
			await message.answer(msg)


# –ü—Ä–∏–Ω—è—Ç–∏–µ —Å—É–º–º—ã –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = CreateBudgets.get_summ)
async def get_budget_summ(message: Message):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		budget_name = ctx_name.get("name")
		cancel_create_budget(message.peer_id, budget_name)
		await message.answer("–°–æ–∑–¥–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ", keyboard = kb_budgets)

		await bot.state_dispenser.delete(message.peer_id)

		try:
			ctx_name.delete("name")
		except KeyError:
			pass

	elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
		budget_name = ctx_name.get("name")
		show_update(message.peer_id, budget_name)
		await message.answer("–ë—é–¥–∂–µ—Ç —Å–æ–∑–¥–∞–Ω", keyboard = kb_budgets)
		await message.answer(news)

		await bot.state_dispenser.delete(message.peer_id)
		ctx_name.delete("name")
	
	else:
		try:
			budget_name = ctx_name.get("name")
			set_summ(message.peer_id, message.text.replace(" ", ""), budget_name)
			show_update(message.peer_id, budget_name)
			
			await message.answer("–ë—é–¥–∂–µ—Ç —Å–æ–∑–¥–∞–Ω", keyboard = kb_budgets)
			await message.answer(news)
			
			await bot.state_dispenser.delete(message.peer_id)
			ctx_name.delete("name")
		except:
			await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–Ω—Ç–∞ –æ–±—â–∏—Ö –±—é–¥–∂–µ—Ç–æ–≤
@bot.on.message(lev = "–û–±—â–∏–µ –±—é–¥–∂–µ—Ç—ã")
async def print_our_budgets(message: Message):
	global lev
	lev = "our"
	show_our_budgets()
	if budget_amount > 0:
		create_keyboard(budget_amount)
		await message.answer(budget_names, keyboard = dynamic_kb)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.get_budget_num)

	else:
		await message.answer(budget_names, keyboard = kb_cancel_create_budgets)


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = ShowOurBudgets.get_budget_num)
async def get_our_budget_num(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		await bot.state_dispenser.delete(message.peer_id)
		
		try:
			ctx_name.delete("name")
		except KeyError:
			pass

		await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb_budgets)

	elif message.text == "–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç":
		await bot.state_dispenser.delete(message.peer_id)
		
		try:
			ctx_name.delete("name")
		except KeyError:
			pass

		await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞", keyboard = kb_cancel)
		await bot.state_dispenser.set(message.peer_id, CreateOurBudgets.get_name)
	
	else:
		try:
			choose_our_budget()
			ctx_name.set("name", message.text)
			await message.answer(dict_names[int(message.text)], keyboard = kb_get_command)
			await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.get_command)
		except:
			await message.answer("–ë—é–¥–∂–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
@bot.on.message(state = ShowOurBudgets.get_command)
async def get_our_command(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		show_our_budgets()
		create_keyboard(budget_amount)
		await message.answer(budget_names, keyboard = dynamic_kb)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.get_budget_num)

	elif message.text == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ":
		await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞", keyboard = kb_back)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.change_name)

	elif message.text == "–í–≤–æ–¥ ‚ûï":
		await message.answer("–°–∫–æ–ª—å–∫–æ –Ω–∞–¥–æ –≤–Ω–µ—Å—Ç–∏ –≤ –±—é–¥–∂–µ—Ç?", keyboard = kb_back)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.change_summ_plus)

	elif message.text == "–í—ã–≤–æ–¥ ‚ûñ":
		await message.answer("–°–∫–æ–ª—å–∫–æ –Ω–∞–¥–æ –≤—ã–≤–µ—Å—Ç–∏ —Å –±—é–¥–∂–µ—Ç–∞?", keyboard = kb_back)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.change_summ_minus)

	elif message.text == "–£–¥–∞–ª–∏—Ç—å –±—é–¥–∂–µ—Ç":
		delete_our_budget()
		await message.answer("–û–±—â–∏–π –±—é–¥–∂–µ—Ç —É–¥–∞–ª—ë–Ω", keyboard = kb_budgets)
		await bot.state_dispenser.delete(message.peer_id)
		ctx_name.delete("name")

	else:
		await message.answer("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = ShowOurBudgets.change_name)
async def change_our_budget_name(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		choose_our_budget()
		new_message = ctx_name.get("name")
		await message.answer(dict_names[int(new_message)], keyboard = kb_get_command)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.get_command)

	else:
		change_our_name(message.text)
		show_our_update(message.text)
		await message.answer("–û–±—â–∏–π –±—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω", keyboard = kb_budgets)
		await message.answer(news)
		await bot.state_dispenser.delete(message.peer_id)
		ctx_name.delete("name")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è –∫ —Å—É–º–º–µ –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = ShowOurBudgets.change_summ_plus)
async def change_our_budget_summ(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		choose_our_budget()
		new_message = ctx_name.get("name")
		await message.answer(dict_names[int(new_message)], keyboard = kb_get_command)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.get_command)

	else:
		try:
			name_id = ctx_name.get("name")
			budget_name = dict_name[int(name_id)]
			plus_our_summ(message.text.replace(" ", ""))
			show_our_update(budget_name)

			await message.answer("–û–±—â–∏–π –±—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω", keyboard = kb_budgets)
			await message.answer(news)

			await bot.state_dispenser.delete(message.peer_id)
			ctx_name.delete("name")
		except:
			await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")


# –°–æ—Å—Ç–æ—è–Ω–∏–µ —É–±–∞–≤–ª–µ–Ω–∏—è —Å —Å—É–º–º—ã –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = ShowOurBudgets.change_summ_minus)
async def change_our_budget_minus(message: Message):
	if message.text == "–ù–∞–∑–∞–¥":
		choose_our_budget()
		new_message = ctx_name.get("name")
		await message.answer(dict_names[int(new_message)], keyboard = kb_get_command)
		await bot.state_dispenser.set(message.peer_id, ShowOurBudgets.get_command)

	else:
		try:
			name_id = ctx_name.get("name")
			budget_name = dict_name[int(name_id)]
			minus_our_summ(message.text.replace(" ", ""))
			show_our_update(budget_name)

			await message.answer("–û–±—â–∏–π –±—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω", keyboard = kb_budgets)
			await message.answer(news)

			await bot.state_dispenser.delete(message.peer_id)
			ctx_name.delete("name")
		except:
			await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = CreateOurBudgets.get_name)
async def get_our_budget_name(message: Message):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		await bot.state_dispenser.delete(message.peer_id)
		
		try:
			ctx_name.delete("name")
		except KeyError:
			pass

		await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb_budgets)

	else:
		create_our_budget(message.text)
		if msg == "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±—é–¥–∂–µ—Ç–∞":
			await message.answer(msg, keyboard = kb_cancel_continue)
			ctx_name.set("name", message.text)
			await bot.state_dispenser.set(message.peer_id, CreateOurBudgets.get_summ)

		elif msg == "–¢–∞–∫–æ–π –±—é–¥–∂–µ—Ç —É–∂–µ –∏–º–µ–µ—Ç—Å—è!":
			await message.answer(msg)


# –ü—Ä–∏–Ω—è—Ç–∏–µ —Å—É–º–º—ã –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
@bot.on.message(state = CreateOurBudgets.get_summ)
async def get_our_budget_summ(message: Message):
	if message.text == "–û—Ç–º–µ–Ω–∞":
		budget_name = ctx_name.get("name")
		cancel_create_our_budget(budget_name)
		await message.answer("–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ", keyboard = kb_budgets)

		await bot.state_dispenser.delete(message.peer_id)

		try:
			ctx_name.delete("name")
		except KeyError:
			pass

	elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
		budget_name = ctx_name.get("name")
		show_our_update(budget_name)
		await message.answer("–û–±—â–∏–π –±—é–¥–∂–µ—Ç —Å–æ–∑–¥–∞–Ω", keyboard = kb_budgets)
		await message.answer(news)

		await bot.state_dispenser.delete(message.peer_id)
		ctx_name.delete("name")
	
	else:
		try:
			budget_name = ctx_name.get("name")
			set_our_summ(message.text.replace(" ", ""), budget_name)
			show_our_update(budget_name)
			
			await message.answer("–û–±—â–∏–π –±—é–¥–∂–µ—Ç —Å–æ–∑–¥–∞–Ω", keyboard = kb_budgets)
			await message.answer(news)
			
			await bot.state_dispenser.delete(message.peer_id)
			ctx_name.delete("name")
		except:
			await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!")


# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
@bot.on.message(lev = "–°–æ–∑–¥–∞—Ç—å –±—é–¥–∂–µ—Ç")
async def create_state(message: Message):
	await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞", keyboard = kb_cancel)
	
	if lev == "my":
		await bot.state_dispenser.set(message.peer_id, CreateBudgets.get_name)
	elif lev == "our":
		await bot.state_dispenser.set(message.peer_id, CreateOurBudgets.get_name)


# –ö–Ω–æ–ø–∫–∞ "–í—Å–µ–≥–æ –¥–µ–Ω–µ–≥"
@bot.on.message(lev = "–í—Å–µ–≥–æ –¥–µ–Ω–µ–≥")
async def total_money(message: Message):
	summ_all_budgets(message.peer_id)
	if all_summs < 0:
		await message.answer(f"‚Äì‚ÇΩ{'{0:,}'.format(all_summs).replace(',', ' ').replace('-', '')}")

	else:
		await message.answer(f"‚ÇΩ{'{0:,}'.format(all_summs).replace(',', ' ')}")


# –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º –±–æ—Ç–∞
@bot.on.message()
async def default(message: Message):
	if message.text.lower() == "reg":
		reg(message.peer_id)
		await message.answer("–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", keyboard = kb_budgets)

	elif message.text == "–ù–∞–∑–∞–¥":
		await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", keyboard = kb_budgets)

	else:
		await message.answer("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", keyboard = kb_budgets)


time_now = datetime.today()
print(f"\n[{str(time_now)[:19]}]: –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

bot.run_forever()
